{% macro slider(id, name, icon, value, min=10, max=100) %}
  <div class="flex items-center justify-end gap-2"
       x-data="sliderBox('{{ id }}', '{{ name }}', {{ min }}, {{ max }}, {{ value }})">
    {% set height = "h-10" %} {% set class = 'from-amber-600 to-sky-200' if name == 'temperature' else 'from-sky-800
     to-white' %} {{ icon }}

    <!-- Slider input -->
    <input class="absolute w-10/12 mx-1 opacity-0 {{ height }}"
           name="{{ name }}"
           type="range"
           min="{{ min }}"
           max="{{ max }}"
           step="1"
           x-model="val" />

    <!-- Colored bar -->
    <div class="flex w-full {{ height }} gap-1 bg-linear-to-r {{ class }}">
      <div class="h-full border-r-8 border-r-white" :style="`width: ${percent}%`"></div>
    </div>
  </div>
{% endmacro %}

{% macro option(id, name, value, icon) %}
  <div class="w-full text-white">
    <input class="peer sr-only" id="{{ id }}" name="{{ name }}" type="radio" value="{{ value }}" />
    <label class="opt flex h-14 items-center justify-center truncate rounded-lg bg-stone-700 peer-checked:bg-pink-700"
           for="{{ id }}">{{ icon }}</label>
  </div>
{% endmacro %}

<!-- prettier-ignore -->
{% macro tab(id, name, value, icon) %}
  <div class="w-full text-white">
    <input class="peer sr-only"
           id="{{ id }}"
           name="{{ name }}"
           type="radio"
           value="{{ value }}"
           x-model="{{ name }}" />
    <label class="opt flex h-14 items-center justify-center truncate peer-checked:bg-pink-700" for="{{ id }}">
      {{ icon }}
    </label>
  </div>
{% endmacro %}

{% macro accordion(icon, title, i) %}
  <div class="overflow-hidden rounded-sm bg-stone-900">
    <button id="controlsAccordionItem{{ i }}"
            type="button"
            class="flex w-full items-center justify-between gap-2 bg-neutral-900 p-4 text-left underline-offset-2 hover:bg-neutral-900/75 focus-visible:bg-neutral-900/75 focus-visible:underline focus-visible:outline-hidden"
            aria-controls="accordionItem{{ i }}"
            x-on:click="selectedAccordionItem = '{{ i }}'"
            x-bind:class="selectedAccordionItem === '{{ i }}' ? '  font-bold'  : ' font-medium'"
            x-bind:aria-expanded="selectedAccordionItem === '{{ i }}' ? 'true' : 'false'">
      <div class="flex items-center">
        {{ icon }} <span class="ms-2">{{ title }}</span>
      </div>
      <svg xmlns="http://www.w3.org/2000/svg"
           viewBox="0 0 24 24"
           fill="none"
           stroke-width="2"
           stroke="currentColor"
           class="size-5 shrink-0 transition"
           aria-hidden="true"
           x-bind:class="selectedAccordionItem === '{{ i }}'  ?  'rotate-180'  :  ''">
        <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5" />
      </svg>
    </button>
    <div x-cloak
         x-show="selectedAccordionItem === '{{ i }}'"
         class="p-2"
         id="accordionItem{{ i }}"
         role="region"
         aria-labelledby="controlsAccordionItem{{ i }}"
         x-collapse>{{ caller() }}</div>
  </div>
{% endmacro %}
